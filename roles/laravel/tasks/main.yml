---
- name: roles/laravel/tasks/main.yml
  command: echo
- name: Prepare $LARAVEL_BASE directory
  file:
    path: "{{ LARAVEL_BASE }}"
    state: directory
    owner: "{{ ansible_user_id }}"
  become: yes
- name: Put laravel.conf for nginx
  template: src=laravel.conf dest=/etc/nginx/conf.d/laravel.conf
  become: yes
  notify: reload nginx
- name: Check for existence of the laravel project
  stat: path={{ LARAVEL_HOME }}
  register: laravel
- name: Install laravel 5.1 LTS
  composer:
    command: create-project
    arguments: "laravel/laravel:5.1"
    working_dir: "{{ LARAVEL_BASE }}"
  when: laravel.stat.exists == false
- name: Check for instance of comja
  stat: path={{ LARAVEL_HOME }}/vendor/laravel-ja/comja5
  register: comja
- name: Install comja5 for Japanizing laravel
  composer:
    command: require
    arguments: "laravel-ja/comja5:~1"
    working_dir: "{{ LARAVEL_HOME }}"
  when:
    - "{{ JAPANIZE_LARAVEL }} == true"
    - comja.stat.exists == false
- name: Japanize laravel source tree (comja5)
  command: ./vendor/bin/comja5 -a
  args:
    chdir: "{{ LARAVEL_HOME }}"
- name: Open permissions of storage/*
  file: 
    path:     "{{ LARAVEL_HOME }}/storage" 
    state:    directory
    mode:     "a+w" 
    recurse:  yes
- name: Open permissions of bootstrap/cache
  file: 
    path:     "{{ LARAVEL_HOME }}/bootstrap/cache"
    state:    directory
    mode:     "a+w" 
    recurse:  yes
- name: Check for instance of whoops
  stat: path={{ LARAVEL_HOME }}/vendor/filp/whoops
  register: whoops
- name: Install Whoops - Error report package
  composer:
    command: require
    arguments: "filp/whoops:~1.0"
    working_dir: "{{ LARAVEL_HOME }}"
  when: whoops.stat.exists == false
- name: Put required file
  copy:
    src:  Whoops.php
    dest: "{{ LARAVEL_HOME }}/app/Exceptions"
- name: Insert code to require Whoops
  lineinfile:
    dest:         "{{ LARAVEL_HOME }}/app/Exceptions/Handler.php"
    regexp:       "^ *require './Whoops.php';$"
    line:         "        require './Whoops.php';"
    insertbefore: "parent::render"
- name: Check for aws stuff
  stat: path={{ LARAVEL_HOME }}/vendor/aws/aws-sdk-php
  register: aws
- name: Install aws
  composer:
    command: require
    arguments: "aws/aws-sdk-php:~3.0"
    working_dir: "{{ LARAVEL_HOME }}"
  when: aws.stat.exists == false
