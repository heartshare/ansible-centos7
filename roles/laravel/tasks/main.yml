---
- name: roles/laravel/tasks/main.yml
  command: echo
- name: Prepare $LARAVEL_BASE directory
  file:
    path: "{{ LARAVEL_BASE }}"
    state: directory
    owner: "{{ ansible_user_id }}"
  become: yes
- name: Put laravel.conf for nginx
  template:
    src:  laravel.conf
    dest: /etc/nginx/conf.d/laravel.conf
    force: no
  become: yes
  notify: reload nginx
- name: Check for existence of the laravel project
  stat: path={{ LARAVEL_HOME }}
  register: laravel
- name: Install laravel 5.1 LTS
  composer:
    command: create-project
    arguments: "laravel/laravel:5.1"
    working_dir: "{{ LARAVEL_BASE }}"
  when: laravel.stat.exists == false
- name: Open permissions of storage/*
  file: 
    path:     "{{ LARAVEL_HOME }}/storage" 
    state:    directory
    owner: "{{ ansible_user_id }}"
    mode:     "a+w" 
    recurse:  yes
  become: yes
- name: Open permissions of bootstrap/cache
  file: 
    path:     "{{ LARAVEL_HOME }}/bootstrap/cache"
    state:    directory
    owner: "{{ ansible_user_id }}"
    mode:     "a+w" 
    recurse:  yes
  become: yes
- name: Check for instance of whoops
  stat: path={{ LARAVEL_HOME }}/vendor/filp/whoops
  register: whoops
- name: Install Whoops - Error report package
  composer:
    command: require
    arguments: "filp/whoops:~1.0"
    working_dir: "{{ LARAVEL_HOME }}"
  when: whoops.stat.exists == false
- name: Enable Whoops
  patch:
    dest: "{{ LARAVEL_HOME }}/app/Exceptions/Handler.php"
    src:  Handler.php.patch
  ignore_errors: true
- name: Insert code to require Whoops
  lineinfile:
    dest:         "{{ LARAVEL_HOME }}/app/Exceptions/Handler.php"
    regexp:       "^ *require './Whoops.php';$"
    line:         "        require './Whoops.php';"
    insertbefore: "parent::render"
- name: Check for aws stuff
  stat: path={{ LARAVEL_HOME }}/vendor/aws/aws-sdk-php
  register: aws
- name: Install aws
  composer:
    command: require
    arguments: "aws/aws-sdk-php:~3.0"
    working_dir: "{{ LARAVEL_HOME }}"
  when: aws.stat.exists == false
- name: Settle {404,50x}.html 
  copy:
    dest: "{{ LARAVEL_HOME }}/public"
    remote_src: true
    src:  "/usr/share/nginx/html/{{ item }}"
  with_items:
    - 404.html
    - 50x.html
    - nginx-logo.png
    - poweredby.png
- name: Add $LARAVEL_SERVER_NAME entry to /etc/hosts
  lineinfile:
    dest:   /etc/hosts
    line:   "{{ LARAVEL_IP_ADDRESS }} {{ LARAVEL_SERVER_NAME }}"
    regexp: "^{{ LARAVEL_IP_ADDRESS }} +{{ LARAVEL_SERVER_NAME }}"
    insertafter:  EOF
  become: yes
- name: Put .env.default
  template:
    src:    env.default
    dest:   "{{ LARAVEL_HOME }}/.env.default"
- name: Set default settings for laravel
  copy:
    src:        "{{ LARAVEL_HOME }}/.env.default"
    dest:       "{{ LARAVEL_HOME }}/.env"
    remote_src: true
- name: Create DB_USERNAME
  command: "createuser -U postgres -s {{ DB_USERNAME }}"
  ignore_errors: yes
  when: DB_CONNECTION == "pgsql"
- name: Create DB_DATABASE
  command: "createdb {{ DB_DATABASE }}"
  ignore_errors: yes
  when: DB_CONNECTION == "pgsql"
- name: Change LANG env
  lineinfile:
    dest:   "/home/{{ ansible_user_id }}/.bashrc"
    regexp: "^export LANG="
    line:   "export LANG=ja_JP.UTF-8"
  when:     "{{ PHP_JAPANIZE }} == true"
- name: Check for instance of comja
  stat: path={{ LARAVEL_HOME }}/vendor/laravel-ja/comja5
  register: comja
- name: Install comja5 for Japanizing laravel
  composer:
    command: require
    arguments: "laravel-ja/comja5:~1"
    working_dir: "{{ LARAVEL_HOME }}"
  when:
    - "{{ LARAVEL_APPLY_COMJA5 }} == true"
    - comja.stat.exists == false
- name: Japanize laravel source tree (comja5)
  command: ./vendor/bin/comja5 -a
  args:
    chdir: "{{ LARAVEL_HOME }}"
  when:
    - "{{ LARAVEL_APPLY_COMJA5 }} == true"
